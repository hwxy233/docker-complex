name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "feature-test" ]
  pull_request:
    branches: [ "feature-test" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  IMAGE_NAME_MUTLTI_CLIENT: hwxy233/multi-client
  IMAGE_NAME_MUTLTI_SERVER: hwxy233/multi-server
  IMAGE_NAME_MUTLTI_NGINX: hwxy233/multi-nginx
  IMAGE_NAME_MUTLTI_WORKER: hwxy233/multi-worker
  AZURE_WEBAPP_NAME: hwxy233-docker-complex

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: ./client
          # use full file path, default is {context}/Dockerfile, but I don't use the default one.
          file: ./client/Dockerfile.dev
          load: true
          tags: ${{ env.IMAGE_NAME_MUTLTI_CLIENT }}:test
      -
        name: Test
        # -e CI=true will set a env variable used by container, npm test will use this
        run: | 
          docker run -e CI=true --rm hwxy233/multi-client:test npm test
      -
        name: Build and push multi-client
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: true
          tags: |
            ${{ env.IMAGE_NAME_MUTLTI_CLIENT }}:latest
            ${{ env.IMAGE_NAME_MUTLTI_CLIENT }}:${{ github.sha }}
      -
        name: Build and push multi-nginx
        uses: docker/build-push-action@v4
        with:
          context: ./nginx
          push: true
          tags: |
            ${{ env.IMAGE_NAME_MUTLTI_NGINX }}:latest
            ${{ env.IMAGE_NAME_MUTLTI_NGINX }}:${{ github.sha }}
      -
        name: Build and push multi-server
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags: |
            ${{ env.IMAGE_NAME_MUTLTI_SERVER }}:latest
            ${{ env.IMAGE_NAME_MUTLTI_SERVER }}:${{ github.sha }}
      -
        name: Build and push multi-worker
        uses: docker/build-push-action@v4
        with:
          context: ./worker
          push: true
          tags: |
            ${{ env.IMAGE_NAME_MUTLTI_WORKER }}:latest
            ${{ env.IMAGE_NAME_MUTLTI_WORKER }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - 
        name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - 
        name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: |
            '${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MUTLTI_CLIENT }}'
            '${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MUTLTI_NGINX }}'
            '${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MUTLTI_SERVER }}'
            '${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MUTLTI_WORKER }}'
          configuration-file:
            ./docker-compose.yml
          startup-command: "docker compose up -d"
          
      - 
        name: Azure logout
        run: |
          az logout